#!/bin/env perl
# Create copies of two hapmap files that contain only the SNPs in common
use 5.010;
use strict;
use warnings;
use autodie;

use List::MoreUtils qw( any );

use IO::Uncompress::Gunzip qw( $GunzipError);
use IO::Compress::Gzip qw( $GzipError );

my $hapmap_A = shift;
my $hapmap_B = shift;

my $fh_outA = open_writable_file("$hapmap_A.intersecting.hmp.txt");
my $fh_outB = open_writable_file("$hapmap_B.intersecting.hmp.txt");

my ($header_A, @SNPinfo_A) = get_SNPinfo_for($hapmap_A);
my ($header_B, @SNPinfo_B) = get_SNPinfo_for($hapmap_B);

print {$fh_outA} $header_A;
print {$fh_outB} $header_B;

my @intersection_A;
my @intersection_B;

my %intersection;
for my $info_A (@SNPinfo_A) {
    my $info_B;
    if (any { $info_A->[0] eq $_->[0] ? $info_B = $_ : 0 } @SNPinfo_B){
        say {$fh_outA} join("\t", @{ $info_A } );
        say {$fh_outB} join("\t", @{ $info_B } );
    }
}

sub get_SNPinfo_for {
    my $file_name = shift;

    my $fh = open_possibly_gzipped_file($file_name);

    my $first_line = readline $fh;

    my @SNPinfo;
    while (my $line = readline $fh) {
        chomp $line;
        my ($name, $alleles, $chr, $pos, @rest) = split /\t/, $line;

        if ($name !~ /\A \# | rs \# /xms)
        {
            push @SNPinfo, [$name, $alleles, $chr, $pos, @rest];
        }
    }

    # Sort by chrom, then by position
    @SNPinfo = sort {$a->[2] <=> $b->[2] || $a->[3] <=> $b->[3] } @SNPinfo;

    close $fh;
    return($first_line, @SNPinfo);
}

# Open either gzipped compressed or normal file (determined by presence/absence of '.gz' file extension)
sub open_possibly_gzipped_file {
    my $filename = shift;

    # Return decompressing filehandle if applicable
    return IO::Uncompress::Gunzip->new($filename, MultiStream => 1) if $filename =~ /\.gz$/;

    # Return normal "reading" filehandle
    open(my $fh, '<', $filename);
    return $fh;
}

sub open_writable_file {
    my $filename = shift;

    if ($filename =~ /.gz $/xms ) {
        my $fh = IO::Compress::Gzip->new($filename)
            or die "IO::Compress::Gzip failed: $GzipError\n";
        return $fh;
    }

    # Return normal "writable" filehandle
    open(my $fh, '>', $filename);
    return $fh;
}
